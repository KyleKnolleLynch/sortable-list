@use 'sass:math';
@use 'breakpoints' as b;

$grid-columns: 12;
$grid-gaps: (
  '0': 0,
  '1': 10px,
  '2': 20px,
  '3': 30px,
);
$justify-values: flex-start, flex-end, center, space-between, space-around,
  space-evenly;

$align-values: flex-start, flex-end, center, stretch, baseline;

//  Base layout classes
.row {
  display: flex;
  flex-flow: row wrap;
}

.column {
  flex-direction: column;
}

//  Grid gaps
@each $key, $val in $grid-gaps {
  .gap-#{$key} > * {
    padding: $val;
  }
  .gap-#{$key} {
    margin-left: -$val;
    margin-right: -$val;
  }
}

//  Justify content classes
@each $val in $justify-values {
  .justify-#{$val} {
    justify-content: $val;
  }
}

//  Align items classes
@each $val in $align-values {
  .align-#{$val} {
    align-items: $val;
  }
}

//  Placing responsive column mixin here to avoid module loop  //
//  Grid system responsive columns
@mixin responsive-col($bp) {
  @for $i from 1 through $grid-columns {
    .col-#{$i}-#{$bp} {
      flex-grow: 0;
      width: math.div($i * 100%, $grid-columns);
    }
  }
}

//  Col classes
// @each $key, $val in b.$breakpoints {
//   @include mixins.mq($key) {
//     @include responsive-col($key);
//   }
// }

@each $key, $val in b.$breakpoints {
  @media only screen and (min-width: $val) {
    @include responsive-col($key);
  }
}
